{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAGzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAGI,sBAAOC,SAZU,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,OADAC,QAAQC,IAAKH,EAAOC,GAEhB,sBAAKG,UAAU,0BAAf,UACE,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,4BAAIA,Q,uBCJDO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbR,EADa,kDACoCS,UAAWF,GAD/C,+DAEDG,MAAMV,GAFL,cAEbW,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAMiB,EAAIjB,MACVC,IAAG,UAAEgB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBnB,QATvB,kBAaZc,GAbY,4CAAH,sDCEPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GAEzB,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GAGEH,EAAS,CACLV,KAAKa,EACLL,SAAS,SAK3B,CAACd,IAIIe,EDnBwBK,CAAapB,GAAhCW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAIpB,OAHApB,QAAQC,IAAImB,GAIR,qCACI,oBAAIlB,UAAU,0BAAd,SAAyCI,IACvCc,GAAW,mBAAGlB,UAAU,mCAAb,qBACjB,qBAAKA,UAAU,YAAf,SAIQe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aElBpBW,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAKA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGI,6BACM6C,EAAWd,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADFA,YCfhCuB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.fd1dfbd7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('')//''\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const hendleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        //console.log('Submit hecho')\r\n       \r\n        if( inputValue.trim().length>2){\r\n            setCategories(cats => [inputValue,...cats ]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        \r\n\r\n        <form  onSubmit={hendleSubmit}>\r\n            {/* <h1>{inputValue}</h1> */}\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    console.log( title, url)\r\n    return (\r\n        <div className=\"card animate__headShake\">\r\n          <img src={url} alt={title}/>\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?&q=${ encodeURI( category )}&limit=10&api_key=RS3ow45Z2qK1iZwjcZaB7O5AvbWgy3Xe`\r\n    const resp =await fetch(url)\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n    \r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nimport { useFetchGifs } from './../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    console.log(loading)\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__fadeInTopRight\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n        <div className=\"card-grid\">\r\n                    \r\n                    \r\n            { \r\n                images.map(img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img }/>\r\n                    ))\r\n                }\r\n                    \r\n        </div>\r\n        </>\r\n       \r\n    )\r\n} \r\n","\r\nimport { useEffect, useState } from 'react';\r\nimport { getGifs } from './../components/helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category )\r\n            .then(imgs => {\r\n                \r\n                    //console.log(imgs)\r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    })\r\n                \r\n                \r\n            })\r\n    },[category])\r\n\r\n\r\n\r\n    return state; //{data: [], loading: true}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    /* const handleAdd = ()=>{\r\n       //setcategories(['HunterXHunter',...categories]);\r\n       setcategories(cats => [...cats, 'HunterXHunter'])\r\n    } */\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n                <ol>\r\n                    { categories.map(category =>(\r\n                        <GifGrid \r\n                        key = { category}\r\n                        category={category} \r\n                        \r\n                        />\r\n                        ))\r\n                    }\r\n                </ol>\r\n\r\n        </>\r\n        )\r\n    }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}